% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/output.R
\name{CNV.toCNVRanger}
\alias{CNV.toCNVRanger}
\title{CNV.toCNVRanger}
\usage{
CNV.toCNVRanger(object, threshold = 0.1, deepthresh = 1)
}
\arguments{
\item{object}{\code{CNV.analysis} object.}

\item{threshold}{numeric. Absolute magnitude for calling a gain or loss (.1)}

\item{deepthresh}{numeric. Absolute magnitude for calling hiamp/deeploss (1)}
}
\value{
a GRangesList for CNVRanger::populationRanges (see Details)
}
\description{
Output CNV results for GISTIC-like analysis in CNVRanger.
}
\details{
CNVRanger can actually handle a RaggedExperiment *or* a GRangesList,
         but for simplicity we use a GRangesList for this function's output.
}
\examples{
library(minfiData)
data(MsetEx)
d <- CNV.load(MsetEx)
data(detail_regions)
anno <- CNV.create_anno(detail_regions = detail_regions)
x <- CNV.segment(CNV.detail(CNV.bin(CNV.fit(query = d['GroupB_1'],
       ref = d[c('GroupA_1', 'GroupA_2', 'GroupA_3')], anno))))

if (require(CNVRanger) {
  grl <- CNV.toCNVRanger(x, threshold = 0.1) 
  if (length(grl) > 1) { 
    cnvrs <- populationRanges(sort(grl), density=0.1, mode="RO", est.recur=T)
    subset(cnvrs, pvalue < 0.05)
  }
}

}
\author{
Tim Triche \email{trichelab@gmail.com}
}
