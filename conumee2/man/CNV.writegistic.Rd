% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/output.R
\name{CNV.writegistic}
\alias{CNV.writegistic}
\title{CNV.writegistic}
\usage{
CNV.writegistic(object, file = NULL, threshold = 0.1, deepthresh = Inf)
}
\arguments{
\item{object}{\code{CNV.analysis} object.}

\item{file}{Path where output file should be written to. Defaults to \code{NULL}: No file is written, table is returned as data.frame object.}

\item{threshold}{numeric. This parameter is used internally for creating summaryplots. It should not be changed. If you intend to change the threshold for summaryplots, please do so within the \code{CNV.summaryplot} function.}

\item{deepthresh}{numeric. magnitude for hiamp/deeploss (Inf, i.e. not used)}
}
\value{
if parameter \code{file} is not supplied, the table is returned as a \code{data.frame} object.
}
\description{
Output segmented CNV analysis results for GISTIC (see Details)
}
\details{
GISTIC is an old MATLAB script. Consider CNVRanger::populationRanges
}
\examples{
library(minfiData)
data(MsetEx)
d <- CNV.load(MsetEx)
data(detail_regions)
anno <- CNV.create_anno(detail_regions = detail_regions)
x <- CNV.segment(CNV.detail(CNV.bin(CNV.fit(query = d['GroupB_1'],
    ref = d[c('GroupA_1', 'GroupA_2', 'GroupA_3')], anno))))

# output text files
CNV.writegistic(x)

# output text file
tmp <- tempfile(fileext=".seg")
CNV.writegistic(x, file=tmp)

if (require(CNVRanger)) { 
  out <- CNV.writegistic(x)
  out$state <- with(out, ifelse(Seg.CN > .1, 3, ifelse(Seg.CN < -.1, 1, 2)))
  colnames(out) <- sub("_Position", "", colnames(out))
  out <- out[, c("Sample", "Chromosome", "Start", "End", "state")]
  grl <- GenomicRanges::makeGRangesListFromDataFrame(out, 
                                                     split.field="Sample", 
                                                     keep.extra.columns=TRUE)
  grl <- GenomicRanges::sort(grl)

  if (length(grl) > 1) { 
    # like original flavor GISTIC, estimating recurrence for significance 
    cnvrs <- populationRanges(grl, density=0.1, est.recur=TRUE)
    subset(cnvrs, pvalue < 0.05)

    # like GISTIC but with reciprocal overlap collapsing between samples:
    cnvrs <- populationRanges(grl, density=0.1, mode="RO", est.recur=TRUE)
    subset(cnvrs, pvalue < 0.05)
  }
}

}
\seealso{
CNVRanger::populationRanges

CNV.toCNVRanger
}
\author{
Tim Triche \email{trichelab@gmail.com}
}
